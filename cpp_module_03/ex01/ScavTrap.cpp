/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ScavTrap.cpp                                       :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: kquetat- <kquetat-@student.42nice.fr>      +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2024/01/28 14:53:19 by kquetat-          #+#    #+#             */
/*   Updated: 2024/01/30 12:00:18 by kquetat-         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "ScavTrap.hpp"

void	ScavTrap::guardGate( void ) const {
	std::cout	<< BG_BLUE << "ScavTrap " \
				<< _name << ": Gate keeper mode activated !" \
				<< RESET << std::endl;
	return ;
}

void	ScavTrap::checkNewStatus( void ) const {
	std::cout << YELLOW << "ScavTrap " << _name << ": Hit points: " << _hitPoints << std::endl;
	std::cout << "ScavTrap " << _name << ": Energy points: " << _energyPoints << std::endl;
	std::cout << "ScavTrap " << _name << ": Attack damage: " << _attackDamage << RESET << std::endl;
	return ;
}

void	ScavTrap::attack(const std::string &target) {
	if (!this->_energyPoints) {
		std::cout	<< RED << "ScavTrap " << _name \
					<< " has no more energy !" << RESET << std::endl;
		return ;
	}
	std::cout	<< RED << "ScavTrap " << _name \
				<< " strikes " << target \
				<< ", causing " << _attackDamage \
				<< " points of damage !" << RESET << std::endl;
	return ;
}

ScavTrap::ScavTrap() : ClapTrap("X") {
	std::cout	<< PURPLE << "ScavTrap " \
				<< _name << ": has been generated !" \
				<< RESET << std::endl;
	_hitPoints = 100;
	_energyPoints = 50;
	_attackDamage = 20;
	this->checkNewStatus();
	return ;
}

ScavTrap::ScavTrap(std::string name) : ClapTrap(name) {
	std::cout	<< PURPLE << "ScavTrap " \
				<< _name << ": has been generated !" \
				<< RESET << std::endl;
	_hitPoints = 100;
	_energyPoints = 50;
	_attackDamage = 20;
	this->checkNewStatus();
	return ;
}

ScavTrap::ScavTrap(ScavTrap const &copy) : ClapTrap(copy) {
	std::cout	<< PURPLE << "ScavTrap " \
				<< _name << ": has been generated by copy !" \
				<< RESET << std::endl;
	if (this == &copy)
		return ;
	*this = copy;
	this->checkNewStatus();
	return ;
}

ScavTrap::~ScavTrap() {
	std::cout	<< CYAN << "ScavTrap " \
				<< _name << ": has been destroyed !" \
				<< RESET << std::endl;
	return ;
}

ScavTrap	&ScavTrap::operator=(ScavTrap const &other) {
	if (this == &other)
		return (*this);
	this->_name = other._name;
	this->_hitPoints = other._hitPoints;
	this->_energyPoints = other._energyPoints;
	this->_attackDamage = other._attackDamage;
	return (*this);
}
